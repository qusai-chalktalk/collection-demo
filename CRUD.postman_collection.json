{
	"info": {
		"_postman_id": "46ca8c40-1324-4581-9391-d2c380034c4e",
		"name": "CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status code should be 201',()=>{",
							"    pm.response.to.have.status(201)",
							"})",
							"const jsonData=pm.response.json()",
							"console.log(jsonData)",
							"pm.test('expect response to have id',()=>{",
							"    pm.expect(jsonData).to.have.property('id')",
							"})",
							"",
							"pm.collectionVariables.set('userID',jsonData.id)",
							"",
							"pm.test('ensure the email',()=>{",
							"    pm.expect(jsonData.email).to.be.eq(\"qusi0@test.com\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"qusai\",\n    \"email\": \"qusi0@test.com\",\n    \"gender\": \"male\",\n    \"status\": \"inactive\"\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status code should be 200',()=>{",
							"    pm.response.to.have.status(200)",
							"})",
							"const jsonData=pm.response.json()",
							"pm.test('expect response to have id',()=>{",
							"    pm.expect(jsonData).to.have.property('id')",
							"})",
							"",
							"",
							"pm.test('ensure the email',()=>{",
							"    pm.expect(jsonData.email).to.be.eq(\"qusi0@test.com\")",
							"})",
							"",
							"pm.test('ensure the status',()=>{",
							"    pm.expect(jsonData.status).to.be.eq(\"active\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 4469,\n    \"name\": \"qusai\",\n    \"email\": \"qusi0@test.com\",\n    \"gender\": \"male\",\n    \"status\": \"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status code should be 204',()=>{",
							"    pm.response.to.have.status(204)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "0cabe3d9332da744d968849285bc160411213124ce1444fc8812378680aeb185",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userID",
			"value": ""
		}
	]
}